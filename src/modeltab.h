#pragma once
#include <gtkmm.h>
#include <gdk/gdk.h>

#include <google/protobuf/message.h>

#include <boost/algorithm/string.hpp>
#include <boost/lexical_cast.hpp>

#include "transport/Transport.hh"
#include "transport/TransportTypes.hh"
#include "transport/Node.hh"
#include "gazebo_config.h"

#include "scenetab.h"
#include "loggertab.h"

namespace SceneReconstruction {
  /** @class ModelTab "modeltab.h"
   * Tab for the GUI that displays additional data about the selected object.
   * @author Bastian Klingen
   */
  class ModelTab : public SceneTab
  {
    public:
      /** Constructor
       * @param _node Gazebo Node Pointer to use
       * @param _logger LoggerTab to use
       */
      ModelTab(gazebo::transport::NodePtr&, LoggerTab*);
      /** Destructor */
      ~ModelTab();

    private:
      gazebo::transport::NodePtr  node;
      LoggerTab*                  logger;

      class Columns : public Gtk::TreeModel::ColumnRecord {
          public:
              /** Constructor */
              Columns() {
                  add(desc);
                  add(val);
              }
         
              /** Destructor */
              ~Columns() {}
         
              /** Gtk::TreeModelColumn that holds the key description */
              Gtk::TreeModelColumn<Glib::ustring> desc;
              /** Gtk::TreeModelColumn that holds the value */
              Gtk::TreeModelColumn<Glib::ustring> val;
          };

      Gtk::ScrolledWindow           scw_model;
      Gtk::TreeView                 trv_model;
      Glib::RefPtr<Gtk::TreeStore>  mdl_store;

      Columns                       mdl_cols; 

      // request message to detect selection through gui
      boost::shared_ptr<gazebo::msgs::Request const> guiReq;
      boost::shared_ptr<gazebo::msgs::Response const> guiRes;
      gazebo::transport::SubscriberPtr resSub, reqSub;

    private:
      void fill_model_treeview(gazebo::msgs::Model);
      void OnReqMsg(ConstRequestPtr&);
      void OnResMsg(ConstResponsePtr&);
    public:
      /** Getter for the tab of this class
       * @return Gtk::Widget the tab generated by this class
       */
      Gtk::Widget& get_tab();
  };
}
